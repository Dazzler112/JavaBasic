다형성(polymorphism)

다형성(polymorphism)이란 하나의 객체가 여러 가지 타입을 가질 수 있는 것을 의미.
자바에서는 이러한 다형성을 부모 클래스 타입의 참조 변수로 자식 클래스 타입의 인스턴스를 참조할 수 있도록 하여 구현하고 있음.
다형성은 상속, 추상화와 더불어 객체 지향 프로그래밍을 구성하는 중요한 특징 중 하나입니다.

참조 변수의 다형성
자바에서는 다형성을 위해 부모 클래스 타입의 참조 변수로 자식 클래스 타입의 인스턴스를 참조할 수 있도록 하고 있다.
이때 참조 변수가 사용할 수 있는 멤버의 개수가 실제 인스턴스의 멤버 개수보다 같거나 적어야 참조할 수 있다.

다음 예제는 참조 변수의 다형성을 보여주는 예제이다.

예제--------------------------------------------------------------------------------------------------------
class Parent { ... }

class Child extends Parent { ... }

...

Parent pa = new Parent(); // 허용

Child ch = new Child();   // 허용

Parent pc = new Child();  // 허용

Child cp = new Parent();  // 오류 발생.

------------------------------------------------------------------------------------------------------------
특정 타입의 참조 변수로는 당연히 같은 타입의 인스턴스를 참조할 수 있음.
참조 변수가 사용할 수 있는 멤버의 개수가 실제 인스턴스의 멤버 개수와 같기 때문.

그리고 부모 클래스 타입의 참조 변수로도 자식 클래스 타입의 인스턴스를 참조할 수 있음.
참조 변수가 사용할 수 있는 멤버의 개수가 실제 인스턴스의 멤버 개수보다 적기 때문임.
 
하지만 반대의 경우인 자식 클래스 타입의 참조 변수로는 부모 클래스 타입의 인스턴스를 참조할 수 없다.
참조 변수가 사용할 수 있는 멤버의 개수가 실제 인스턴스의 멤버 개수보다 많기 때문이다.


즉) 상위개체 - 하위개체 1
             - 하위개체 2
상위개체는 하위개체1이다 or 2이다 가능 
하지만 하위개체1 or 2 는 상위개체다 라고 하는게 불가능
다른말로 쉽게 해석해보면 (이) 동물은 표범 or 사자다 가능해도
사자(표범) 자체가 동물이다 라고 표현은 불가능(사자, 표범 종(이개체)만이 동물이다 라고 할수 없으니)
